name: Bump Version and Tag

on:
  push:
    branches: [ main ]
  #   paths:
  #     - 'src/**.py'
  #     - 'test/**.py'
  #     - 'Makefile'
  #     - 'pyproject.toml'
    paths-ignore:
      - '**/_version.py'

  workflow_dispatch:
    inputs:
      bump_type:
        description: 'Version Bump Type'
        type: choice
        options: ['major', 'minor', 'patch', 'none']
        required: false
        default: 'none'
      dry_run:
        description: 'Dry Run'
        type: boolean
        required: false
        default: false

jobs:
  version-tag:
    name: Get New Version Tag
    runs-on: ubuntu-latest
    if: github.actor != 'github-actions[bot]'
    outputs:
      major: ${{ steps.version-tag.outputs.major }}
      minor: ${{ steps.version-tag.outputs.minor }}
      patch: ${{ steps.version-tag.outputs.patch }}
      increment: ${{ steps.version-tag.outputs.increment }}
      version: ${{ steps.version-tag.outputs.version }}
      version_tag: ${{ steps.version-tag.outputs.tag }}
      version_type: ${{ steps.version-tag.outputs.type }}
      previous_version: ${{ steps.version-tag.outputs.previous_version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get Bumped Version Tag
        uses: ./.github/actions/bump-version-tag
        id: version-tag
        with:
          bump_type: ${{ github.event.inputs.bump_type }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  update-version-and-tag:
    name: Update Repo Tag and Version
    runs-on: ubuntu-latest
    needs: version-tag
    if: |
      github.actor != 'github-actions[bot]' && 
      ${{ !inputs.dry_run }} && 
      needs.version-tag.outputs.version_type != 'none'
    steps:
      - uses: actions/checkout@v4
      # This sets up the git user for the GitHub bot
      - name: Configure Git User
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
      # This sets up ssh keys for the AllenInstitute GitHub
      - name: Configure AllenInstitute Repo Authorization
        uses: ./.github/actions/setup-ai-github-urls
        with:
          token: ${{ secrets.AI_PACKAGES_TOKEN }}
          ssh_private_key: ${{ secrets.AIBSGITHUB_PRIVATE_KEY }}
      - name: Update Version
        env:
          VERSION: ${{ needs.version-tag.outputs.version }}
          VERSION_TAG: ${{ needs.version-tag.outputs.version_tag }}
        run: |
          echo "Updating version to ${{ env.VERSION }} (${{ env.VERSION_TAG }})"
          find src -name '_version.py' -exec sed -i "s/__version__ = .*/__version__ = \"${{ env.VERSION }}\"/" {} \;
          git add src/**/_version.py
          git commit -m "Bump version to ${{ env.VERSION_TAG }}"
          git tag -a ${{ env.VERSION_TAG }} -m "Release ${{ env.VERSION_TAG }}"
          git push
          git push --tags
